var _user$project$Main$update = F2(
	function (msg, model) {
		var _p0 = msg;
		switch (_p0.ctor) {
			case 'TypeTodo':
				return {
					ctor: '_Tuple2',
					_0: _elm_lang$core$Native_Utils.update(
						model,
						{todoText: _p0._0}),
					_1: _elm_lang$core$Platform_Cmd$none
				};
			case 'AddTodo':
				return {
					ctor: '_Tuple2',
					_0: _elm_lang$core$Native_Utils.update(
						model,
						{
							todos: A2(
								_elm_lang$core$Basics_ops['++'],
								model.todos,
								{
									ctor: '::',
									_0: {id: 1, text: model.todoText},
									_1: {ctor: '[]'}
								})
						}),
					_1: _elm_lang$core$Platform_Cmd$none
				};
			default:
				return {
					ctor: '_Tuple2',
					_0: _elm_lang$core$Native_Utils.update(
						model,
						{
							todos: A2(
								_elm_lang$core$List$filter,
								function (todo) {
									return !_elm_lang$core$Native_Utils.eq(todo.id, _p0._0);
								},
								model.todos)
						}),
					_1: _elm_lang$core$Platform_Cmd$none
				};
		}
	});
var _user$project$Main$viewTodoList = function (todo) {
	return A2(
		_elm_lang$html$Html$ul,
		{ctor: '[]'},
		{
			ctor: '::',
			_0: _elm_lang$html$Html$text(todo.text),
			_1: {ctor: '[]'}
		});
};
var _user$project$Main$initialModel = {
	todoText: '',
	todos: {ctor: '[]'},
	nextId: 1
};
var _user$project$Main$Todo = F2(
	function (a, b) {
		return {id: a, text: b};
	});
var _user$project$Main$Model = F3(
	function (a, b, c) {
		return {todoText: a, todos: b, nextId: c};
	});
var _user$project$Main$DeleteById = function (a) {
	return {ctor: 'DeleteById', _0: a};
};
var _user$project$Main$AddTodo = {ctor: 'AddTodo'};
var _user$project$Main$TypeTodo = function (a) {
	return {ctor: 'TypeTodo', _0: a};
};
var _user$project$Main$viewAddTodoTextBox = function (model) {
	return A2(
		_elm_lang$html$Html$span,
		{ctor: '[]'},
		{
			ctor: '::',
			_0: A2(
				_elm_lang$html$Html$input,
				{
					ctor: '::',
					_0: _elm_lang$html$Html_Attributes$defaultValue(model.todoText),
					_1: {
						ctor: '::',
						_0: _elm_lang$html$Html_Events$onInput(_user$project$Main$TypeTodo),
						_1: {ctor: '[]'}
					}
				},
				{ctor: '[]'}),
			_1: {
				ctor: '::',
				_0: A2(
					_elm_lang$html$Html$button,
					{
						ctor: '::',
						_0: _elm_lang$html$Html_Events$onClick(_user$project$Main$AddTodo),
						_1: {ctor: '[]'}
					},
					{
						ctor: '::',
						_0: _elm_lang$html$Html$text('Add Todo'),
						_1: {ctor: '[]'}
					}),
				_1: {ctor: '[]'}
			}
		});
};
var _user$project$Main$view = function (model) {
	return A2(
		_elm_lang$html$Html$div,
		{ctor: '[]'},
		{
			ctor: '::',
			_0: A2(
				_elm_lang$html$Html$div,
				{ctor: '[]'},
				{
					ctor: '::',
					_0: _elm_lang$html$Html$text('List of Todos'),
					_1: {ctor: '[]'}
				}),
			_1: {
				ctor: '::',
				_0: _user$project$Main$viewAddTodoTextBox(model),
				_1: {
					ctor: '::',
					_0: A2(
						_elm_lang$html$Html$div,
						{ctor: '[]'},
						A2(_elm_lang$core$List$map, _user$project$Main$viewTodoList, model.todos)),
					_1: {ctor: '[]'}
				}
			}
		});
};
var _user$project$Main$main = _elm_lang$html$Html$program(
	{
		view: _user$project$Main$view,
		init: {ctor: '_Tuple2', _0: _user$project$Main$initialModel, _1: _elm_lang$core$Platform_Cmd$none},
		update: _user$project$Main$update,
		subscriptions: function (_p1) {
			return _elm_lang$core$Platform_Sub$none;
		}
	})();
